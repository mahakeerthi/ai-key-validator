{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint", "prettier"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier",
    "plugin:prettier/recommended"
  ],
  "rules": {
    // Prettier integration
    "prettier/prettier": "error",

    // TypeScript specific rules
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/restrict-template-expressions": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/require-await": "error",

    // General rules
    "no-console": "warn",
    "no-debugger": "error",
    "no-alert": "error",
    "no-var": "error",
    "prefer-const": "error",
    "prefer-template": "error",
    "template-curly-spacing": ["error", "never"],
    "object-shorthand": "error",
    "prefer-destructuring": [
      "error",
      {
        "array": false,
        "object": true
      }
    ],

    // Security rules
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-script-url": "error",

    // Error prevention
    "no-unreachable": "error",
    "no-unused-expressions": "error",
    "no-useless-return": "error",
    "consistent-return": "error",
    "default-case": "error",
    "eqeqeq": ["error", "always"],
    "no-fallthrough": "error",

    // Code style (enforced by Prettier but good to have as backup)
    "quotes": ["error", "double", { "avoidEscape": true }],
    "semi": ["error", "always"],
    "comma-dangle": ["error", "only-multiline"],
    "no-trailing-spaces": "error",
    "no-multiple-empty-lines": ["error", { "max": 2 }]
  },
  "env": {
    "node": true,
    "es2022": true,
    "jest": true
  },
  "overrides": [
    {
      "files": ["**/*.test.ts", "**/*.spec.ts", "**/tests/**/*"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "no-console": "off"
      }
    },
    {
      "files": ["src/cli.ts"],
      "rules": {
        "no-console": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/require-await": "off"
      }
    },
    {
      "files": ["jest.config.js", "*.config.js"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off"
      }
    }
  ],
  "ignorePatterns": [
    "dist/",
    "node_modules/",
    "coverage/",
    "*.js",
    "!jest.config.js"
  ]
}